name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ released, prereleased ]

  workflow_dispatch:

jobs:
  ktlint:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment

      - name: Run ktlintFormat
        run: ./gradlew ktlintFormat

      - name: Check for KTLint violations
        run: |
          ./gradlew ktlintCheck
          if [ $? -ne 0 ]; then
            echo "KTLint found violations that could not be automatically fixed."
            exit 1
          fi
  detekt:
    name: Run Detekt Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment

      - name: Run Detekt and Attempt Auto-Correction
        run: ./gradlew detekt --auto-correct

      - name: Check for remaining Detekt issues
        run: ./gradlew detekt

      - name: Upload Detekt reports
        if: failure()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: detekt-reports
          path: |
            **/build/reports/detekt/*.html
            **/build/reports/detekt/*.xml
            **/build/reports/detekt/*.txt
            **/build/reports/detekt/*.sarif
          retention-days: 7
  spotless:
    name: Run Spotless Check
    runs-on: ubuntu-latest
    needs: [ ktlint, detekt ]

    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment

      - name: Run Spotless Apply
        run: ./gradlew spotlessApply

      - name: Check for uncommitted Spotless changes
        run: |
          git diff --exit-code --quiet
          if [ $? -ne 0 ]; then
            echo "SpotlessApply has made changes. Please run './gradlew spotlessApply' locally and commit the changes."
            exit 1
          else
            echo "Spotless check passed. No formatting changes needed or changes were already applied."
          fi

      - name: Run Spotless Check
        run: ./gradlew spotlessCheck
  build_app:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [spotless]

    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment

      - name: Build debug APK
        run: ./gradlew assembleDebug

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unit-test-results
          path: app/build/reports/tests/testDebugUnitTest/

  integration_test:
    name: Run Integration Tests
    runs-on: macos-latest
    needs: test

    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment

      - name: Run Integration Tests
        uses: reactivecircus/android-emulator-runner@v2.34.0
        with:
          api-level: 35
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedCheck

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: integration-test-results
          path: app/build/reports/androidTests/connected/

  publish:
    name: Release build and publish
    runs-on: macOS-latest
    steps:
      - name: Setup Common Environment
        uses: ./.github/actions/setup-environment
      - name: Publish to MavenCentral
        # replace with publishAndReleaseToMavenCentral when everything works as expected
        run: ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}